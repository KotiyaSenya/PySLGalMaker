@ PName   : pySLGalEngine
@ author  : 风笳(aprosanae)
@ version : 1.0
@ mail    : axdiaoqi220@gmail.com

简介：
  这个简单的框架基本算是个玩具程序，使用语言为python，版本为Linux下的2.6.5，主要使用的包为pygame，开发目的是为了降低个人galgame开发的技术门槛。

优势：
  1.支持跨平台，需要简单的预处理，主要受字符编码所限，对这部分有兴趣的请参阅后面的"跨平台"部分。
  2.只需要按语法说明填写文件夹下的script.sanae文件即可，程序自动解析填写内容。这部分属于必看内容，请参阅后面的“语法”段落。

不足:
  由于时间仓促，大量功能并未添加，甚至包括诸如存档之类的关键功能，这部分后续更新会陆续加上（学生是很忙的……）。

术语：
  个人使用帧(frame)来指代任意时刻屏幕显示。
  每一帧，包括背景图片，文字，歌曲，以及可能有的按钮。

语法：
  为了方便程序解析，定义了许多语法，请务必按以下语法填写。初始的script.sanae可以作为借鉴。
  
  概述：任意两帧用空行分割，任意一帧可以有以下几种元素的任意组合。

  0.xxx
  这是必填项，代表当前的索引。一般来说都只是个数字。这一版，相邻两帧只能是连续的数字---除了有选择按钮的帧。注意，索引必从0开始。
  eg.2120
  
  1.[background = 'xxx.xxx']
  解释：[]与background，=为必填项，等号两旁可以有空格也可以没有，单引号括住图片的名字，图片请放在BG文件夹下。所有符号均为英文输入情况下的符号。这句话的作用是插入背景图片。图片的格式的话，常见的图片格式都能解析。大小会自动转成 800x600，所以最好不要用竖着的图片……
  eg：[background = 'sanae.png']

  2.[BGM = 'xxx.xxx']
  解释：要求同上，支持音乐格式，windows下为mp3和wav,Linux下为wav和ogg。这句话插入背景音乐，播放方式为无限循环。
  eg：[BGM = 'sanae.wav']

  3.<xxxxxx>
  解释：文本，也就是一般gal的文字。尖括号的所有内容均会出现在文本框中。有上限，大致是120个字，对于单帧来说，无论如何都够了。支持两种形式：
  a.<风笳：今天天气哇哈哈>
  b.<今天天气哇哈哈>
  对a这种形式，显示时，风笳会单独放在第一行，并加上：，表示说话人，剩下内容在第二行显示。而b的话，第一行留空，第二行显示。具体请查看script。有一个比较大的bug是：如果当前帧没有说话人，但是出现了：，那会造成一些问题，具体的可以看一下……
  eg：
  <风笳：今天天气哇哈哈>
  <今天天气哇哈哈>

  4.
  [choice]
  xxxx->xxx
  xxxx->xxx
  [/choice]
  解释：这是出现选项按钮的写法，事实上，[choice]和[/choice]并不影响解析，也就是说，你写成：
  xxxx->xxx
  xxxx->xxx
  也是完全可以的。但是为了保持脚本的易懂，推荐加上。当然，你自己定义为：
  [b]
  xxxx->xxx
  xxxx->xxx
  [/f]
  都是可以的。
  ->两旁不能有空格.
  ->前是按钮上显示的内容，后面是一个数字,代表选择这个按钮之后跳转到的索引。
  每一帧出现的按钮也是有限的，个人试过7个，比较不好看，8个也应该是可以的，不过写着费劲……
  顺便一提，按钮的颜色是可变的，事实上，只要改掉文件夹那个叫 button.png 的图片就好了。推荐使用这个网站制作按钮图片 http://button.tugai.net/

  以上就是现在有的语法，需要注意的是，除了作为索引的数字，其他都是选填项，若当前帧某项空缺，会直接继承上一帧的参数。利用这一点，BGM可以只指定几次。

  所以，一般script的写法就是这样：
  
  0
  [background = 'sanae.png']
  [BGM = 'uuz.wav']
  <早苗真是太可爱了>

  1
  <天神乱漫制作组究竟多喜欢葵?>

  2
  [choice]
  选择卯之花->40
  选择葵->50
  选择佐奈->60
  选择苏方->200
  [/choice]

  BADEND的话，指定一个较大的index就好。

跨平台:
  虽然这个引擎不管是windows还是Linux都可以运行，但是还是需要一些处理。直白的说，windows下的script.sanae脚本不能直接在Linux下被程序直接读取成功，反之亦然。所以，windows下的script若想放在linux下，首先推荐下一个gedit，这是一个优秀的文本编辑器，相当小。使用gedit打开script.sanae，另存为，编码选UTF-8，行尾选择Unix。同样，Linux的话，gedit本来就是默认的文本编辑器，打开就好，另存为GBK，行尾选windows就好。

写在最后：
  写到这里，发现还是挺麻烦的？嘛，就这样吧。有什么好的意见都可以发在我的邮箱的。
